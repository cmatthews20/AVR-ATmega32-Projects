; Cole Matthews
; I/O Multiplication

.INCLUDE "M32DEF.INC"

SER R18
OUT DDRB, R18 ; SET PORTB AS OUTPUT
OUT DDRD, R18 ; SET PORTD AS OUTPUT

CLR R18
OUT DDRA, R18 ; SET PORTA AS INPUT
OUT DDRC, R18 ; SET PORTC AS INPUT

LDI R25, 0x01

K1: ; LABAL THE FOLLOWING INSTRUCTION
SBIC PINC, 0 ; CHEECK IF SW0 IS PRESSED, IF PRESSED THEN THIS PIN IS CLEARED (GND) AND SKIP NEXT INSTRUCTION
JMP K1
IN R16, PINA ; COPYING VALUE OF INPUT REGISTER TO R16
MOV R17, R16 ; COPYING R16 TO R17 FOR DISPLAY PURPOSES
NEG R17 ; GETTING 2-S COMP FOR DISPLAY
SUB R17, R25 ; SUBTRACTING ONE FROM R16 TO GET BITWISE NEGATIVE OF INPUT FOR DISPLAY
OUT PORTB, R17 ; SHOW THE VALUE ON PORTB

K2: ; LABEL THE FOLLOWING INSTRUCTION
SBIC PINC, 7 ; CHECK IF SW7 IS PRESSED, IF PRESSED THEN THIS PIN IS CLEARED (GND) AND SKIP NEXT INSTRUCTION
JMP K2
IN R20, PINA ; COPYING VALUE OF INPUT REGISTER TO R20
MOV R21, R20
NEG R21
SUB R21, R25
OUT PORTD, R21 ; SHOW THE VALUE ON PORTD

M:
SBIS PINC, 7 ; CHECK IF SW7 IS PRESSED, IF PRESSED THEN SKIP NEXT INSTRUCTION, you may use sw3
JMP M
MUL R20, R16 ; MULTIPLY VALUES OF R20 AND R16
NEG R0
NEG R1
SUB R0, R25
SUB R1, R25

OUT PORTB, R0 ; MULTIPLICATION RESULT IS STORED IN R0 AND R1, DISPLAY EIGHT BITS ON PORTB AND OTHER ON PORTD
OUT PORTD, R1
JMP K1
